{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to \u8349\u6ce5\u9a6c\u4e4b\u5bb6\n\n\n\u4eba\u751f\u6700\u751c\u871c\u7684\u6b22\u4e50,\u90fd\u662f\u5fe7\u4f24\u7684\u679c\u5b9e,\u4eba\u751f\u6700\u7eaf\u7f8e\u7684\u4e1c\u897f,\u90fd\u662f\u4ece\u82e6\u96be\u4e2d\u5f97\u6765\u7684,\u6211\u4eec\u8981\u4eb2\u8eab\u7ecf\u5386\u8270\u96be,\u7136\u540e\u624d\u61c2\u5f97\u600e\u6837\u53bb\u5b89\u6170\u522b\u4eba\u3002\n\n\n\u517b\u6210\u505a\u7b14\u8bb0\u7684\u597d\u4e60\u60ef!\n\n\nCommands\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs mkdocs gh-deploy -b master\n - Push master.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to", 
            "text": "\u4eba\u751f\u6700\u751c\u871c\u7684\u6b22\u4e50,\u90fd\u662f\u5fe7\u4f24\u7684\u679c\u5b9e,\u4eba\u751f\u6700\u7eaf\u7f8e\u7684\u4e1c\u897f,\u90fd\u662f\u4ece\u82e6\u96be\u4e2d\u5f97\u6765\u7684,\u6211\u4eec\u8981\u4eb2\u8eab\u7ecf\u5386\u8270\u96be,\u7136\u540e\u624d\u61c2\u5f97\u600e\u6837\u53bb\u5b89\u6170\u522b\u4eba\u3002  \u517b\u6210\u505a\u7b14\u8bb0\u7684\u597d\u4e60\u60ef!", 
            "title": "Welcome to \u8349\u6ce5\u9a6c\u4e4b\u5bb6"
        }, 
        {
            "location": "/#commands", 
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs mkdocs gh-deploy -b master  - Push master.  mkdocs help  - Print this help message.", 
            "title": "Commands"
        }, 
        {
            "location": "/#project-layout", 
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "Project layout"
        }, 
        {
            "location": "/paloalto2elk1/", 
            "text": "paloalto\u65e5\u5fd7\u8f6c\u53d1\u5230elk1\n\n\n\u5728\u5185\u7f51\u60f3\u6784\u5efa\u4e2a\u65e5\u5fd7\u5206\u6790\u7cfb\u7edf\uff0c\u4fbf\u4e8e\u5206\u6790\u871c\u7f50\u3001paloalto\u3001VPN\u3001\u8d5b\u95e8\u94c1\u514b\u7684\u544a\u8b66\u65e5\u5fd7\u3002\u9488\u5bf9paloalto\u7684\u65e5\u5fd7\u91c7\u96c6\u662f\u901a\u8fc7\u4ee5\u4e0b\u67b6\u6784:\npaloalto -\n syslog -\n logstash -\n elastic search -\n kibana\n\n\n\u914d\u7f6e paloalto\n\n\n\u8fdb\u5165 paloalto \u5728 Device \u4e2d\u914d\u7f6e syslog,\u5982\u56fe:\n\n\n\n\u4e4b\u540e\u5728 Objects \u5185\u914d\u7f6e Log Forwarding Profile,\u5982\u4e0b\uff1a\n\n\n\n\u6ce8\u610f Syslog,\u901a\u4fe1\u65e5\u5fd7\u548c\u5a01\u80c1\u65e5\u5fd7\u4e3a\u4e0d\u540c\u7aef\u53e3\u3002\n\u6700\u540e\u5728 Policies Security \u4e0a\u914d\u7f6e\u4e0alog Forwarding\n\n\n\n\n\u914d\u7f6e rsyslog\n\n\n\u5b89\u88c5\u7565\uff0c\u4e3b\u8981\u662f\u914d\u7f6e\u6587\u4ef6\u3002\n\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u65b9\u5f0f\u5206\u65b0\u65e7\u4e24\u79cd\u65b9\u5f0f\uff0c\u65e7\u5f0f(\u4e0d\u5f71\u54cd\u4f7f\u7528)\uff1a\n\n\n$ModLoad imtcp\n$InputTCPServerRun 515\n$AllowedSender TCP, 192.168.136.0/24\n$template Remote2,\n/var/log/rsyslog/%fromhost-ip%/traffic_%fromhost-ip%_%$YEAR%-%$MONTH%-%$DAY%.log\n\n# The above code is old-fashioned\n\n\n\n\n\u65b0\u683c\u5f0f\u4e3a\uff1a\n\n\n# /etc/rsyslog.d/pa_traffic.conf\nmodule(load=\nimtcp\n)\ntemplate (name=\nDynFile1\n type=\nstring\n string=\n/var/log/rsyslog/%fromhost-ip%/traffic_%fromhost-ip%_%$YEAR%-%$MONTH%-%$DAY%.log\n)\n\ninput(type=\nimtcp\n \n    port=\n515\n\n    ruleset=\npa_traffic\n)\nruleset(name=\npa_traffic\n){\n    action(type=\nomfile\n dynaFile=\nDynFile1\n)   \n}\n# end file \n# /etc/rsyslog.d/pa_threat.conf\nmodule(load=\nimtcp\n)\ntemplate (name=\nDynFile2\n type=\nstring\n string=\n/var/log/rsyslog/%fromhost-ip%/threat_%fromhost-ip%_%$YEAR%-%$MONTH%-%$DAY%.log\n)\n\ninput(type=\nimtcp\n \n    port=\n513\n\n    ruleset=\npa_threat\n)\nruleset(name=\npa_threat\n){\n    action(type=\nomfile\n dynaFile=\nDynFile2\n)   \n}\n# end file \n# cat /etc/rsyslog.conf|grep -i include\n$IncludeConfig /etc/rsyslog.d/*.conf\n\n\n\n\n\u65e5\u5fd7\u751f\u6210\u5982\u4e0b:\n\n\n\n\n\u53c2\u8003\u6587\u6863\n\n\n\n\nhttp://rsyslog-doc.readthedocs.io", 
            "title": "paloalto\u65e5\u5fd7\u8f6c\u53d1elk1"
        }, 
        {
            "location": "/paloalto2elk1/#paloaltoelk1", 
            "text": "\u5728\u5185\u7f51\u60f3\u6784\u5efa\u4e2a\u65e5\u5fd7\u5206\u6790\u7cfb\u7edf\uff0c\u4fbf\u4e8e\u5206\u6790\u871c\u7f50\u3001paloalto\u3001VPN\u3001\u8d5b\u95e8\u94c1\u514b\u7684\u544a\u8b66\u65e5\u5fd7\u3002\u9488\u5bf9paloalto\u7684\u65e5\u5fd7\u91c7\u96c6\u662f\u901a\u8fc7\u4ee5\u4e0b\u67b6\u6784:\npaloalto -  syslog -  logstash -  elastic search -  kibana", 
            "title": "paloalto\u65e5\u5fd7\u8f6c\u53d1\u5230elk1"
        }, 
        {
            "location": "/paloalto2elk1/#paloalto", 
            "text": "\u8fdb\u5165 paloalto \u5728 Device \u4e2d\u914d\u7f6e syslog,\u5982\u56fe:  \n\u4e4b\u540e\u5728 Objects \u5185\u914d\u7f6e Log Forwarding Profile,\u5982\u4e0b\uff1a  \n\u6ce8\u610f Syslog,\u901a\u4fe1\u65e5\u5fd7\u548c\u5a01\u80c1\u65e5\u5fd7\u4e3a\u4e0d\u540c\u7aef\u53e3\u3002\n\u6700\u540e\u5728 Policies Security \u4e0a\u914d\u7f6e\u4e0alog Forwarding", 
            "title": "\u914d\u7f6e paloalto"
        }, 
        {
            "location": "/paloalto2elk1/#rsyslog", 
            "text": "\u5b89\u88c5\u7565\uff0c\u4e3b\u8981\u662f\u914d\u7f6e\u6587\u4ef6\u3002\n\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u65b9\u5f0f\u5206\u65b0\u65e7\u4e24\u79cd\u65b9\u5f0f\uff0c\u65e7\u5f0f(\u4e0d\u5f71\u54cd\u4f7f\u7528)\uff1a  $ModLoad imtcp\n$InputTCPServerRun 515\n$AllowedSender TCP, 192.168.136.0/24\n$template Remote2, /var/log/rsyslog/%fromhost-ip%/traffic_%fromhost-ip%_%$YEAR%-%$MONTH%-%$DAY%.log \n# The above code is old-fashioned  \u65b0\u683c\u5f0f\u4e3a\uff1a  # /etc/rsyslog.d/pa_traffic.conf\nmodule(load= imtcp )\ntemplate (name= DynFile1  type= string  string= /var/log/rsyslog/%fromhost-ip%/traffic_%fromhost-ip%_%$YEAR%-%$MONTH%-%$DAY%.log )\n\ninput(type= imtcp  \n    port= 515 \n    ruleset= pa_traffic )\nruleset(name= pa_traffic ){\n    action(type= omfile  dynaFile= DynFile1 )   \n}\n# end file \n# /etc/rsyslog.d/pa_threat.conf\nmodule(load= imtcp )\ntemplate (name= DynFile2  type= string  string= /var/log/rsyslog/%fromhost-ip%/threat_%fromhost-ip%_%$YEAR%-%$MONTH%-%$DAY%.log )\n\ninput(type= imtcp  \n    port= 513 \n    ruleset= pa_threat )\nruleset(name= pa_threat ){\n    action(type= omfile  dynaFile= DynFile2 )   \n}\n# end file \n# cat /etc/rsyslog.conf|grep -i include\n$IncludeConfig /etc/rsyslog.d/*.conf  \u65e5\u5fd7\u751f\u6210\u5982\u4e0b:   \u53c2\u8003\u6587\u6863   http://rsyslog-doc.readthedocs.io", 
            "title": "\u914d\u7f6e rsyslog"
        }, 
        {
            "location": "/paloalto2elk2/", 
            "text": "paloalto\u65e5\u5fd7\u8f6c\u53d1\u5230elk2\n\n\n\u6539\u8fdb\n\n\n\u4e0a\u6b21\u7528rsyslog\u5bf9paloalto\u7684\u65e5\u5fd7\u8fdb\u884c\u5b58\u50a8(\u6587\u4ef6),\u4e4b\u540e\u901a\u8fc7\u67e5\u770b\u8d44\u6599\u53d1\u73b0logstash\u53ef\u4ee5\u5b8c\u5168\u4ee3\u66ffrsyslog\u7684\u529f\u80fd\uff0c\u76f4\u63a5\u76d1\u542c\u7aef\u53e3\u5c31\u53ef\u4ee5\uff0c\u67b6\u6784\u4fee\u6539\u5982\u4e0b:\npaloalto -\n logstash -\n elastic search -\n kibana\n\n\n\u914d\u7f6e\u5982\u4e0b\uff1a\n\n\ninput {\n    tcp {\n        port =\n 513\n        type =\n paloalto\n    }\n}\n\n\n\n\n\u4e4b\u540e\u5c31\u662f\u5bf9paloalto\u7684\u65e5\u5fd7\u8fdb\u884c\u52a0\u5de5\uff0c\u65b9\u4fbf\u6295\u9012elastic search \u4e2d,\u5982\u4e0b :\n\n\n######## \u4ee5\u4e0b\u89c4\u5219\u6765\u81ea\u56fd\u5916\u53cb\u4eba\u535a\u5ba2[\u5f15\u7528]\n######## PALOALTO FILTER #####################\nfilter {\nif [type] == \npaloalto\n {\ngrok {\npatterns_dir =\n \n/usr/share/logstash/vendor/bundle/jruby/1.9/gems/logstash-patterns-core-4.0.2/patterns\n\nmatch =\n [ \nmessage\n, \n%\n%{POSINT}\n%{MONTH} %{MONTHDAY} %{TIME} %{GREEDYDATA:palo_message}\n ]\n}\n\nmutate {\nrename =\n [\npalomessage\n, \nmessage\n]\n}\n\nif [type] == \npaloalto\n and [message] =~ /TRAFFIC/ {\ncsv {\ncolumns =\n [ \nDomain\n, \nReceiveTime\n, \nSerialNum #\n, \nType\n, \nThreat-ContentType\n, \nConfigVersion\n, \nGenerateTime\n, \nSourceAddress\n, \nDestinationAddress\n, \nNATSourceIP\n, \nNATDestinationIP\n, \nRule\n, \nSourceUser\n,\nDestinationUser\n,\nApplication\n,\nVirtualSystem\n,\nSourceZone\n,\nDestinationZone\n,\nInboundInterface\n,\nOutboundInterface\n,\nLogAction\n,\nTimeLogged\n,\nSessionID\n,\nRepeatCount\n,\nSourcePort\n,\nDestinationPort\n,\nNATSourcePort\n,\nNATDestinationPort\n,\nFlags\n,\nIPprotocol\n,\nAction\n,\nBytes\n,\nBytesSent\n,\nBytesReceived\n,\nPackets\n,\nStartTime\n,\nElapsedTimeInSec)\n,\nCategory\n,\nPadding\n,\nseqno\n,\nactionflags\n,\nSourceCountry\n,\nDestinationCountry\n,\ncpadding\n,\npkts_sent\n,\npkts_received\n, \nsession_end_reason\n\n]\n}\n}\nelse if [type] == \npaloalto\n and [message] !~ /TRAFFIC/ {\ncsv {\ncolumns =\n [ \nDomain\n, \nReceiveTime\n, \nSerialNum\n, \nType\n, \nThreat-ContentType\n, \nConfigVersion\n, \nGenerateTime\n, \nSourceAddress\n, \nDestinationAddress\n, \nNATSourceIP\n, \nNATDestinationIP\n, \nRule\n, \nSourceUser\n, \nDestinationUser\n, \nApplication\n, \nVirtualSystem\n, \nSourceZone\n, \nDestinationZone\n, \nInboundInterface\n, \nOutboundInterface\n, \nLogAction\n, \nTimeLogged\n, \nSessionID\n, \nRepeatCount\n, \nSourcePort\n, \nDestinationPort\n, \nNATSourcePort\n, \nNATDestinationPort\n , \nFlags\n, \nIPprotocol\n, \nAction\n, \nURL\n, \nThreat-ContentName\n, \nCategory\n, \nreportid\n, \nSeverity\n, \nDirection\n, \nseqno\n, \nactionflags\n, SourceCountry, \nDestinationCountry\n, \ncpadding\n, \nContentType\n, \npcap_id\n, \nfiledigest\n, \ncloud\n, \nurl_idx\n, \nuser_agent\n, \nfiletype\n, \nxff\n, \nreferer\n, \nsender\n, \nsubject\n, \nrecipient\n\n]\n}\n}\n\ndate {\ntimezone =\n \nAsia/Shanghai\n\nmatch =\n [ \nGenerateTime\n, \nYYYY/MM/dd HH:mm:ss\n ]\ntarget =\n \n@timestamp\n\n}\n\nmutate {\nconvert =\n [ \nBytes\n, \ninteger\n ]\nconvert =\n [ \nBytesReceived\n, \ninteger\n ]\nconvert =\n [ \nBytesSent\n, \ninteger\n ]\nconvert =\n [ \nElapsedTimeInSec\n, \ninteger\n ]\nconvert =\n [ \ngeoip.area_code\n, \ninteger\n ]\nconvert =\n [ \ngeoip.dma_code\n, \ninteger\n ]\nconvert =\n [ \ngeoip.latitude\n, \nfloat\n ]\nconvert =\n [ \ngeoip.longitude\n, \nfloat\n ]\nconvert =\n [ \nNATDestinationPort\n, \ninteger\n ]\nconvert =\n [ \nNATSourcePort\n, \ninteger\n ]\nconvert =\n [ \nPackets\n, \ninteger\n ]\nconvert =\n [ \npkts_received\n, \ninteger\n ]\nconvert =\n [ \npkts_sent\n, \ninteger\n ]\nconvert =\n [ \nseqno\n, \ninteger\n ]\ngsub =\n [ \nRule\n, \n \n, \n_\n, \nApplication\n, \n( |-)\n, \n_\n ]\nremove_field =\n [ \nmessage\n, \nraw_message\n ]\n}\n\n################ GEO LOCATION ######################################\n\nif [SourceAddress] and [SourceAddress] !~ \n(^127\\.0\\.0\\.1)|(^10\\.)|(^172\\.1[6-9]\\.)|(^172\\.2[0-9]\\.)|(^172\\.3[0-1]\\.)|(^192\\.168\\.)|(^169\\.254\\.)\n {\ngeoip {\ndatabase =\n \n/opt/seim/GeoLite2-City.mmdb\n\nsource =\n \nSourceAddress\n\ntarget =\n \nSourceGeo\n\n}\n#Delete 0,0 in SourceGeo.location if equal to 0,0\nif ([SourceGeo.location] and [SourceGeo.location] =~ \n0,0\n) {\nmutate {\nreplace =\n [ \nSourceGeo.location\n, \n ]\n}\n}\n}\n\n#Geolocate logs that have DestinationAddress and if that DestinationAddress is a non-RFC1918 address\nif [DestinationAddress] and [DestinationAddress] !~ \n(^127\\.0\\.0\\.1)|(^10\\.)|(^172\\.1[6-9]\\.)|(^172\\.2[0-9]\\.)|(^172\\.3[0-1]\\.)|(^192\\.168\\.)|(^169\\.254\\.)\n {\ngeoip {\ndatabase =\n \n/opt/seim/GeoLite2-City.mmdb\n\nsource =\n \nDestinationAddress\n\ntarget =\n \nDestinationGeo\n\n}\n#Delete 0,0 in DestinationGeo.location if equal to 0,0\nif ([DestinationGeo.location] and [DestinationGeo.location] =~ \n0,0\n) {\nmutate {\nreplace =\n [ \nDestinationAddress.location\n, \n ]\n}\n}\n}\n\n#Takes the 5-tuple of source address, source port, destination address, destination port, and protocol and does a SHA1 hash to fingerprint the flow. This is a useful\n#way to be able to do top N terms queries on flows, not just on one field.\nif [SourceAddress] and [DestinationAddress] {\nfingerprint {\nconcatenate_sources =\n true\nmethod =\n \nSHA1\n\nkey =\n \nlogstash\n\nsource =\n [ \nSourceAddress\n, \nSourcePort\n, \nDestinationAddress\n, \nDestinationPort\n, \nIPProtocol\n ]\n}\n}\n}\n}\n\noutput {\nif [type] == \npaloalto\n {\nelasticsearch {\nhosts =\n [\n192.168.2.72:9200\n]\nindex =\n \nlogstash-palo-firewall-%{+YYYY.MM.dd}\n\n#template =\n \n/opt/seim/elasticsearch-template.json\n\n#template_overwrite =\n true\n}\n}\n}\n\n\n\n\n\u542f\u52a8logstash\n\n\n/usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/pa2.conf\n\n\n\n\n\u5f15\u7528\uff1a\n\n\n\n\n\u5728 Palo Alto \u8bbe\u5907\u4e0a\u521b\u5efa Syslog \u76ee\u6807\n\n\nPalo Alto Firewalls with Logstash\n\n\nKibana Logstash ElasticSearch for PalAlto\n\n\nWindows ELK Stack \n Palo Alto Firewal\n\n\nELK + PALO ALTO NETWORKS\n\n\nELK + PALO ALTO NETWORKS PART 2 (URL AND CUSTOM LOGS)", 
            "title": "paloalto\u65e5\u5fd7\u8f6c\u53d1elk2"
        }, 
        {
            "location": "/paloalto2elk2/#paloaltoelk2", 
            "text": "", 
            "title": "paloalto\u65e5\u5fd7\u8f6c\u53d1\u5230elk2"
        }, 
        {
            "location": "/paloalto2elk2/#_1", 
            "text": "\u4e0a\u6b21\u7528rsyslog\u5bf9paloalto\u7684\u65e5\u5fd7\u8fdb\u884c\u5b58\u50a8(\u6587\u4ef6),\u4e4b\u540e\u901a\u8fc7\u67e5\u770b\u8d44\u6599\u53d1\u73b0logstash\u53ef\u4ee5\u5b8c\u5168\u4ee3\u66ffrsyslog\u7684\u529f\u80fd\uff0c\u76f4\u63a5\u76d1\u542c\u7aef\u53e3\u5c31\u53ef\u4ee5\uff0c\u67b6\u6784\u4fee\u6539\u5982\u4e0b:\npaloalto -  logstash -  elastic search -  kibana  \u914d\u7f6e\u5982\u4e0b\uff1a  input {\n    tcp {\n        port =  513\n        type =  paloalto\n    }\n}  \u4e4b\u540e\u5c31\u662f\u5bf9paloalto\u7684\u65e5\u5fd7\u8fdb\u884c\u52a0\u5de5\uff0c\u65b9\u4fbf\u6295\u9012elastic search \u4e2d,\u5982\u4e0b :  ######## \u4ee5\u4e0b\u89c4\u5219\u6765\u81ea\u56fd\u5916\u53cb\u4eba\u535a\u5ba2[\u5f15\u7528]\n######## PALOALTO FILTER #####################\nfilter {\nif [type] ==  paloalto  {\ngrok {\npatterns_dir =   /usr/share/logstash/vendor/bundle/jruby/1.9/gems/logstash-patterns-core-4.0.2/patterns \nmatch =  [  message ,  % %{POSINT} %{MONTH} %{MONTHDAY} %{TIME} %{GREEDYDATA:palo_message}  ]\n}\n\nmutate {\nrename =  [ palomessage ,  message ]\n}\n\nif [type] ==  paloalto  and [message] =~ /TRAFFIC/ {\ncsv {\ncolumns =  [  Domain ,  ReceiveTime ,  SerialNum # ,  Type ,  Threat-ContentType ,  ConfigVersion ,  GenerateTime ,  SourceAddress ,  DestinationAddress ,  NATSourceIP ,  NATDestinationIP ,  Rule ,  SourceUser , DestinationUser , Application , VirtualSystem , SourceZone , DestinationZone , InboundInterface , OutboundInterface , LogAction , TimeLogged , SessionID , RepeatCount , SourcePort , DestinationPort , NATSourcePort , NATDestinationPort , Flags , IPprotocol , Action , Bytes , BytesSent , BytesReceived , Packets , StartTime , ElapsedTimeInSec) , Category , Padding , seqno , actionflags , SourceCountry , DestinationCountry , cpadding , pkts_sent , pkts_received ,  session_end_reason \n]\n}\n}\nelse if [type] ==  paloalto  and [message] !~ /TRAFFIC/ {\ncsv {\ncolumns =  [  Domain ,  ReceiveTime ,  SerialNum ,  Type ,  Threat-ContentType ,  ConfigVersion ,  GenerateTime ,  SourceAddress ,  DestinationAddress ,  NATSourceIP ,  NATDestinationIP ,  Rule ,  SourceUser ,  DestinationUser ,  Application ,  VirtualSystem ,  SourceZone ,  DestinationZone ,  InboundInterface ,  OutboundInterface ,  LogAction ,  TimeLogged ,  SessionID ,  RepeatCount ,  SourcePort ,  DestinationPort ,  NATSourcePort ,  NATDestinationPort  ,  Flags ,  IPprotocol ,  Action ,  URL ,  Threat-ContentName ,  Category ,  reportid ,  Severity ,  Direction ,  seqno ,  actionflags , SourceCountry,  DestinationCountry ,  cpadding ,  ContentType ,  pcap_id ,  filedigest ,  cloud ,  url_idx ,  user_agent ,  filetype ,  xff ,  referer ,  sender ,  subject ,  recipient \n]\n}\n}\n\ndate {\ntimezone =   Asia/Shanghai \nmatch =  [  GenerateTime ,  YYYY/MM/dd HH:mm:ss  ]\ntarget =   @timestamp \n}\n\nmutate {\nconvert =  [  Bytes ,  integer  ]\nconvert =  [  BytesReceived ,  integer  ]\nconvert =  [  BytesSent ,  integer  ]\nconvert =  [  ElapsedTimeInSec ,  integer  ]\nconvert =  [  geoip.area_code ,  integer  ]\nconvert =  [  geoip.dma_code ,  integer  ]\nconvert =  [  geoip.latitude ,  float  ]\nconvert =  [  geoip.longitude ,  float  ]\nconvert =  [  NATDestinationPort ,  integer  ]\nconvert =  [  NATSourcePort ,  integer  ]\nconvert =  [  Packets ,  integer  ]\nconvert =  [  pkts_received ,  integer  ]\nconvert =  [  pkts_sent ,  integer  ]\nconvert =  [  seqno ,  integer  ]\ngsub =  [  Rule ,    ,  _ ,  Application ,  ( |-) ,  _  ]\nremove_field =  [  message ,  raw_message  ]\n}\n\n################ GEO LOCATION ######################################\n\nif [SourceAddress] and [SourceAddress] !~  (^127\\.0\\.0\\.1)|(^10\\.)|(^172\\.1[6-9]\\.)|(^172\\.2[0-9]\\.)|(^172\\.3[0-1]\\.)|(^192\\.168\\.)|(^169\\.254\\.)  {\ngeoip {\ndatabase =   /opt/seim/GeoLite2-City.mmdb \nsource =   SourceAddress \ntarget =   SourceGeo \n}\n#Delete 0,0 in SourceGeo.location if equal to 0,0\nif ([SourceGeo.location] and [SourceGeo.location] =~  0,0 ) {\nmutate {\nreplace =  [  SourceGeo.location ,   ]\n}\n}\n}\n\n#Geolocate logs that have DestinationAddress and if that DestinationAddress is a non-RFC1918 address\nif [DestinationAddress] and [DestinationAddress] !~  (^127\\.0\\.0\\.1)|(^10\\.)|(^172\\.1[6-9]\\.)|(^172\\.2[0-9]\\.)|(^172\\.3[0-1]\\.)|(^192\\.168\\.)|(^169\\.254\\.)  {\ngeoip {\ndatabase =   /opt/seim/GeoLite2-City.mmdb \nsource =   DestinationAddress \ntarget =   DestinationGeo \n}\n#Delete 0,0 in DestinationGeo.location if equal to 0,0\nif ([DestinationGeo.location] and [DestinationGeo.location] =~  0,0 ) {\nmutate {\nreplace =  [  DestinationAddress.location ,   ]\n}\n}\n}\n\n#Takes the 5-tuple of source address, source port, destination address, destination port, and protocol and does a SHA1 hash to fingerprint the flow. This is a useful\n#way to be able to do top N terms queries on flows, not just on one field.\nif [SourceAddress] and [DestinationAddress] {\nfingerprint {\nconcatenate_sources =  true\nmethod =   SHA1 \nkey =   logstash \nsource =  [  SourceAddress ,  SourcePort ,  DestinationAddress ,  DestinationPort ,  IPProtocol  ]\n}\n}\n}\n}\n\noutput {\nif [type] ==  paloalto  {\nelasticsearch {\nhosts =  [ 192.168.2.72:9200 ]\nindex =   logstash-palo-firewall-%{+YYYY.MM.dd} \n#template =   /opt/seim/elasticsearch-template.json \n#template_overwrite =  true\n}\n}\n}  \u542f\u52a8logstash  /usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/pa2.conf  \u5f15\u7528\uff1a   \u5728 Palo Alto \u8bbe\u5907\u4e0a\u521b\u5efa Syslog \u76ee\u6807  Palo Alto Firewalls with Logstash  Kibana Logstash ElasticSearch for PalAlto  Windows ELK Stack   Palo Alto Firewal  ELK + PALO ALTO NETWORKS  ELK + PALO ALTO NETWORKS PART 2 (URL AND CUSTOM LOGS)", 
            "title": "\u6539\u8fdb"
        }, 
        {
            "location": "/apt/", 
            "text": "", 
            "title": "APT"
        }, 
        {
            "location": "/about/", 
            "text": "About me\n\n\nc4bbage@\u8349\u6ce5\u9a6c\u4e4b\u5bb6\n\n\nEmail: c4bbage#qq.com\nGithub: https://github.com/c4bbage\n\u5fae\u535a: http://weibo.com/s4turnus\n\n\n\u66fe\u7528\u57df\u540d:\n\n\n\n\ncunlide.com\n\n\nweisuo.org \n\n\n\u5747\u5df2\u5e9f\u5f03\n\n\n\n\n\n\n\n\n\u8349\u6ce5\u9a6c\u4e00\u6b21\u56e2:\n\n\n\n\nzcgonvh", 
            "title": "About"
        }, 
        {
            "location": "/about/#about-me", 
            "text": "c4bbage@\u8349\u6ce5\u9a6c\u4e4b\u5bb6  Email: c4bbage#qq.com\nGithub: https://github.com/c4bbage\n\u5fae\u535a: http://weibo.com/s4turnus  \u66fe\u7528\u57df\u540d:   cunlide.com  weisuo.org   \u5747\u5df2\u5e9f\u5f03     \u8349\u6ce5\u9a6c\u4e00\u6b21\u56e2:   zcgonvh", 
            "title": "About me"
        }
    ]
}